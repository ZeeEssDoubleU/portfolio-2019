{"data":{"allDatoCmsProject":{"edges":[{"node":{"id":"DatoCmsProject-1588044-en","title":"Interactive Photo Gallery","description":"My intro to CSS grid system and modal overlays.  \n\nFeatures a photo grid layout and a search/filter functionality of returned photos.  Each photo is clickable into a modal overlay.  Photos can be traversed back/forward from the photo overlay.\n\nAssigned from Treehouse Tech Degree Program (www.teamtreehouse.com).","tech":["HTML","CSS","Github Pages"],"link":"https://zeeessdoubleu.github.io/teamtreehouse-interactive_photo_gallery/","order":1,"slug":"interactive-photo-gallery"}},{"node":{"id":"DatoCmsProject-1588041-en","title":"Awesome Employee Directory","description":"This is a mock company employee directory. AJAX is used to pull data from a random employee API.  Populates screen with tiles of employee info.  \n\nFeatures a search/filter of returned employees.  Each employee tile is clickable into modal overlay.  Modal is able to traverse next/back through employees.\n\nAssigned from Treehouse Tech Degree Program (www.teamtreehouse.com).","tech":["JQuery","AJAX","Github Pages","HTML","CSS"],"link":"https://zeeessdoubleu.github.io/teamtreehouse-awesome_directory/","order":1,"slug":"awesome-employee-directory"}},{"node":{"id":"DatoCmsProject-1588039-en","title":"React Flickr Gallery","description":"My first React project.  Pulls photos from Flickr API based on search terms and predefined page queries.\n\nFeatures search field and default clickable search categories.\n\nAssigned from Treehouse Tech Degree Program (www.teamtreehouse.com).","tech":["React","Flickr","Netlify","HTML","CSS"],"link":"https://react-flickr-gallery.netlify.com","order":1,"slug":"react-flickr-gallery"}},{"node":{"id":"DatoCmsProject-1550674-en","title":"Chartizard","description":"A fun, beginner project built for learning purposes.  \n\nAssigned from Treehouse Tech Degree Program (www.teamtreehouse.com).","tech":["CSS","HTML","Github Pages"],"link":"https://zeeessdoubleu.github.io/teamtreehouse-chartizard/","order":1,"slug":"chartizard"}},{"node":{"id":"DatoCmsProject-1550654-en","title":"WatchStuff","description":"A Youtube skeleton clone built with React, Redux and the Youtube API.  Uses Redux Saga middleware to help manage Redux state.  Implements features such as lazy loading results, search functionality, trending videos, liked and saved videos.\n\nBuilt for learning purposes and personal use.","tech":["React","Redux","Youtube API","Netlify","Sass","Semantic UI"],"link":"https://watchstuff.netlify.com/","order":5,"slug":"watchstuff"}},{"node":{"id":"DatoCmsProject-1550664-en","title":"Portfolio","description":"The website you're on right now!  Built from scratch using Gatsby and React.  Integrated with Contentful as a CMS and deployed on Netlify.","tech":["React","Gatsby","GraphQL","DatoCMS","Netlify","Styled-Components","GSAP"],"link":"https://zswportfolio.netlify.com","order":4,"slug":"portfolio"}},{"node":{"id":"DatoCmsProject-1550668-en","title":"DevConnector","description":"Full stack social networking app.  Built using React, Redux, Express and MongoDb.  Features user authentication with Passport using JSON web tokens.  Deployed on Heroku.\n\nBuilt for learning purposes, primarily as an introduction to back-end development.  Learned the basics of Node, MongoDb and authentication using JSON web tokens.","tech":["React","Redux","Heroku","Express","MongoDb","Passport"],"link":"https://poke-master-connector.herokuapp.com","order":2,"slug":"devconnector"}},{"node":{"id":"DatoCmsProject-1550670-en","title":"Github Issue Tracker","description":"App that tracks repository issues on Github.  Built for learning purposes with Apollo and React.  This project served as my introduction to GraphQL and Apollo.\n\nFeatures include search functionality, optimistic UI updates, server-side result filtering, like/unlike and commenting.","tech":["React","Apollo","GraphQL","Netlify","Sass"],"link":"https://zsw-github-issue-tracker.netlify.com","order":3,"slug":"github-issue-tracker"}}]}}}